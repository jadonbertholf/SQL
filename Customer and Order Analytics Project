#In this SQL, I'm querying a database with multiple tables in it to quantify statistics about customer and order data.

#1. How many orders were placed in January? Filtered out the messy data.
SELECT COUNT(orderID) FROM BIT_DB.JanSales
WHERE orderID <> 'Order ID'
AND orderID IS NOT NULL
AND orderID <> ''
AND length(orderID) = 6

#2. How many of those orders were for an iPhone?
SELECT COUNT(orderID) FROM BIT_DB.JanSales
WHERE orderID <> 'Order ID'
AND orderID IS NOT NULL
AND orderID <> ''
AND length(orderID) = 6
AND Product = "iPhone"

#3. Select the customer account numbers for all the orders that were placed in February.
SELECT BIT_DB.customers.acctnum
FROM BIT_DB.customers
LEFT JOIN FebSales
ON BIT_DB.customers.order_id = FebSales.orderID

#4. Which product was the cheapest one sold in January, and what was the price?
SELECT Product, price
FROM BIT_DB.JanSales
GROUP BY product, price
ORDER BY price asc
LIMIT 1;

#5. What is the total revenue for each product sold in January?
SELECT SUM(quantity)*price as revenue, Product
FROM BIT_DB.JanSales
WHERE Product <> ''
GROUP BY Product
ORDER BY revenue desc
LIMIT 19

#6. Which products were sold in February at 548 Lincoln St, Seattle, WA 98101, how many of each were sold, and what was the total revenue?
SELECT SUM(quantity)*price as revenue, Product, quantity
FROM BIT_DB.FebSales
WHERE location = "548 Lincoln St, Seattle, WA 98101"

#7. How many customers ordered more than 2 products at a time in February, and what was the average amount spent for those customers?
SELECT count(customers.acctnum), AVG(feb.quantity)*price
FROM BIT_DB.FebSales feb
LEFT JOIN BIT_DB.customers
ON BIT_DB.customers.order_id = Feb.orderID
WHERE feb.quantity > 2
AND length(orderID) = 6
AND orderID <> "Order ID"

#8. List all the products sold in Los Angeles in February, and include how many of each were sold.
SELECT Product, SUM(quantity)
FROM BIT_DB.FebSales
WHERE location like "%Los Angeles%"
GROUP BY Product
